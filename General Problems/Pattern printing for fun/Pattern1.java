//  Pattern:
//        15    15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15
//        15	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	15
//        15	14	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	14	15
//        15	14	13	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	13	14	15
//        15	14	13	12	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	12	13	14	15
//        15	14	13	12	11	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	11	12	13	14	15
//        15	14	13	12	11	10	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	8	8	8	8	8	8	8	8	8	8	8	8	8	8	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	7	7	7	7	7	7	7	7	7	7	7	7	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	6	6	6	6	6	6	6	6	6	6	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	5	5	5	5	5	5	5	5	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	4	4	4	4	4	4	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	3	3	3	3	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	2	2	2	2	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	2	1	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	2	1	1	2	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	2	2	2	2	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	3	3	3	3	3	3	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	4	4	4	4	4	4	4	4	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	5	5	5	5	5	5	5	5	5	5	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	6	6	6	6	6	6	6	6	6	6	6	6	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	7	7	7	7	7	7	7	7	7	7	7	7	7	7	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	8	8	8	8	8	8	8	8	8	8	8	8	8	8	8	8	9	10	11	12	13	14	15
//        15	14	13	12	11	10	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	9	10	11	12	13	14	15
//        15	14	13	12	11	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	11	12	13	14	15
//        15	14	13	12	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	11	12	13	14	15
//        15	14	13	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	12	13	14	15
//        15	14	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	13	14	15
//        15	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	14	15
//        15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15	15
class Pattern1{
    public static void main(String[] args) {
        int length = 30;
        for (int i = 0; i < length; i++) {
            for (int j = 0; j < length; j++) {
                int n1 = i%(length-1);
                int n2 = j%(length-1);
                for (int k = 0; k < (length+1)/2; k++)
                    if(n1 == k || n1 == length - k - 1 || n2 == k || n2 == length - k - 1){
                        int out = (length+1)/2 - k;
                        System.out.print(out+"\t");
                        break;
                    }
            }
            System.out.println();
        }
    }
}